name: Deploy to Amazon ECS

on:
  push:
    branches:
      - master


env: 
  AWS_REGION: us-west-2
  ECR_REPOSITORY: ${{ secrets.REPO }}
  

jobs:
  build:
    name: build And push to ECR 
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Create ECR repo if necessary
      id: ECR_REPOSITORY
      uses: int128/create-ecr-repository-action@v1
      with:
        repository: ${{ secrets.REPO }}
        lifecycle-policy: config/lifecycle-policy.json
        

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
        ECR_REPOSITORY: ${{ secrets.REPO }}
      run: |
        # Build a docker container and
        # push it to ECR so that it can
        # be deployed to ECS.
        cd app
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
       
    - name: Install and configure kubectl
      # uses: actions/checkout@v2
      run: |
        make install-eksctl
        VERSION=$(curl --silent https://storage.googleapis.com/kubernetes-release/release/stable.txt)
        curl https://storage.googleapis.com/kubernetes-release/release/$VERSION/bin/linux/amd64/kubectl \
          --progress-bar \
          --location \
          --remote-name
        chmod +x kubectl
        sudo mv kubectl /usr/local/bin/
        echo ${{ secrets.KUBECONFIG }} | base64 --decode > kubeconfig.yaml

    - name: Deploy to EKS
      uses: actions/checkout@v2
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          export ECR_REPOSITORY=${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}
          export IMAGE_TAG=${{ github.sha }}
          export KUBECONFIG=kubeconfig.yaml
          envsubst < k8s/kustomization.tmpl.yaml > k8s/kustomization.yaml
          kubectl kustomize k8s | kubectl apply -f -